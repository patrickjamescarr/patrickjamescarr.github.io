{"version":3,"sources":["ImageLoader.js","MenuDrawer.js","BottomBar.js","ActionsPanel.js","DotifyControls.js","Canvas.js","Colours.js","ImageProcessor.js","ColourTable.js","OutputPanel.js","App.js","serviceWorker.js","index.js"],"names":["ImageLoader","this","fileSelector","buildFileSelector","image","Image","document","createElement","setAttribute","addEventListener","event","readImageFile","files","target","reader","FileReader","onload","e","src","result","readAsDataURL","click","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","drawerPaper","overflow","listItem","paddingLeft","paddingRight","MenuDrawer","props","classes","imageLoader","getImage","onImageLoad","className","Drawer","variant","paper","anchor","Divider","List","ListItem","button","key","onClick","select","ListItemIcon","menuItemClick","appBar","top","bottom","backgroundColor","palette","background","toolbar","marginLeft","showingActionPanel","maxHeight","minHeight","height","imageDimentions","fontSize","scrollbar","default","grow","flexGrow","BottomAppBar","AppBar","position","naturalWidth","naturalHeight","orientation","Toolbar","IconButton","edge","color","showOutputPanel","show","header","justifyContent","alignItems","fontWeight","ActionPanel","Controls","children","settings","applyClick","closeClick","flexDirection","flex","textTransform","margin","spacing","slider","action","active","sliderTitle","float","controlContainer","padding","paddingBottom","paletteButton","footer","marginTop","DotifyControls","React","useState","dotify","dotDiameter","setDiameter","setPalette","Typography","id","align","gutterBottom","Slider","value","aria-labelledby","step","min","max","valueLabelDisplay","onChange","newValue","ToggleButtonGroup","exclusive","newPalette","aria-label","size","ToggleButton","disabled","Button","workspace","showActionPanel","Canvas","onWheel","zoom","ref","canvasRef","Colours","legoColourId","name","hex","BrickLinkId","BrickLinkName","ImageProcessor","imageCtx","outputCtx","dotSize","scale","dotOffset","coloursUsed","canvas","clearRect","calculateDotDimentions","dotsHeight","dotsWidth","segmentSize","calculateSegmentSize","outputArray","y","push","x","getAverageRGBValuesFromImageSegment","r","g","b","dotColour","colourMatch","toRGBString","drawDotToContext","Math","floor","console","log","backgroundColour","beginPath","fillStyle","fillRect","strokeStyle","arc","PI","fill","stroke","pieceSize","imgData","getImageData","i","data","length","matchResults","map","c","colour","exec","parseInt","hexToRgb","red","green","blue","lowestMatchIndex","indexOf","closestColourMatch","incrementUseCount","usedIndex","findIndex","count","table","tableContainer","overflowX","link","text","primary","ColourTable","rows","sort","a","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","row","scope","cx","cy","strokeWidth","Link","href","rel","breakpoints","up","menuButton","marginRight","sectionHeader","sectionDetails","alignSelf","content","borderTop","createThumbnail","showImage","imgPlaceholder","alt","style","maxWidth","OutputPanel","window","sourceSrc","sourceCanvasRef","current","toDataURL","outputSrc","outputCanvasRef","srcThumbnail","outputThumbnail","imageProcessed","panel","selected","showCanvas","handleCanvasToggle","sourceImage","outputCanvasDetails","speed","horizontal","handleDrawerToggle","container","undefined","body","CssBaseline","Hidden","smUp","implementation","open","onClose","ModalProps","keepMounted","xsDown","darkTheme","createMuiTheme","type","typography","fontFamily","join","App","loadImage","path","ctx","state","getContext","drawImage","setState","handleToggleActionsPanel","actionPanelContent","handleActionPanelApply","details","imageProcessor","processImage","outputScale","outputSettings","handCloseActionPanel","handleOutputPanelToggle","handleOutputCanvasZoom","deltaY","redrawImage","createRef","actionPanelSettings","ThemeProvider","Component","withStyles","mixins","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca92510e.chunk.js","sourcesContent":["export default class ImageLoader {\r\n\r\n    constructor() {\r\n        this.fileSelector = this.buildFileSelector();\r\n        this.image = new Image();\r\n    }\r\n\r\n    buildFileSelector() {\r\n        const fileSelector = document.createElement('input');\r\n        fileSelector.setAttribute('type', 'file');\r\n        fileSelector.setAttribute('accept', '.jpg, .jpeg, .png');\r\n        fileSelector.addEventListener('change', (event) => {\r\n            this.readImageFile(event);\r\n        });\r\n        return fileSelector;\r\n    }\r\n\r\n    readImageFile(event) {\r\n        const files = event.target.files;\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            this.image.src = e.target.result;\r\n        };\r\n\r\n        if (files[0]) {\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    }\r\n\r\n    getImage() {\r\n        return this.image;\r\n    }\r\n\r\n    select() {\r\n        this.fileSelector.click();\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\r\nimport ImageLoader from './ImageLoader';\r\n\r\nconst drawerWidth = 50;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    overflow: 'hidden',\r\n  },\r\n  listItem: {\r\n    paddingLeft: '13px',\r\n    paddingRight: '13px',\r\n  },\r\n}));\r\n\r\nexport default function MenuDrawer(props) {\r\n  const classes = useStyles();\r\n  const imageLoader = new ImageLoader();\r\n  const image = imageLoader.getImage();\r\n\r\n  image.onload = props.onImageLoad;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <Divider />\r\n        <List>\r\n          <ListItem className={classes.listItem} button key={\"Add Image\"} onClick={() => imageLoader.select()}>\r\n            <ListItemIcon><AddPhotoAlternateIcon /></ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <ListItem className={classes.listItem} button key={\"Dotify\"} onClick={() => props.menuItemClick(\"Dotify\")}>\r\n          <ListItemIcon><BlurOnIcon /></ListItemIcon>\r\n        </ListItem>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  toolbar: {\r\n    marginLeft: props => props.showingActionPanel ? '290px' : '50px',\r\n    maxHeight: '43px',\r\n    minHeight: '43px',\r\n    height: '43px',\r\n  },\r\n  imageDimentions: {\r\n    width: '200px',\r\n    fontSize: '0.7rem',\r\n  },\r\n  scrollbar: {\r\n    marginLeft: props => props.showingActionPanel ? '290px' : '50px',\r\n    height: '16px',\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function BottomAppBar(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <div className={classes.scrollbar}>\r\n        <div className={classes.imageDimentions}>{props.image.naturalWidth} x {props.image.naturalHeight} px @ 100%</div>\r\n        <Divider orientation=\"vertical\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        <div className={classes.grow} />\r\n        <IconButton edge=\"end\" color=\"inherit\">\r\n          <MoreIcon onClick={() => props.showOutputPanel()} />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: props => props.show ? 'flex' : 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        overflow: 'hidden',\r\n        marginLeft: '50px',\r\n    },\r\n    header: {\r\n        height: '56px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: '1.4em',\r\n        fontWeight: '600',\r\n    },\r\n}));\r\n\r\nexport default function ActionPanel(props) {\r\n    const classes = useStyles(props);\r\n    const Controls = props.children;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <Divider />\r\n                <div className={classes.header}>Dotify</div>\r\n                <Divider />\r\n                <Controls settings={props.settings} applyClick={props.applyClick} closeClick={props.closeClick}></Controls>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Slider, Typography } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        textTransform: 'lowercase',\r\n        fontWeight: '700',\r\n        margin: theme.spacing(1),\r\n        width: '91.5px',\r\n    },\r\n    slider: {\r\n        color: theme.palette.action.active,\r\n    },\r\n    sliderTitle: {\r\n        float: 'left',\r\n    },\r\n    controlContainer: {\r\n        padding: '20px',\r\n        paddingBottom: '0',\r\n    },\r\n    paletteButton: {\r\n        width: '66.6px',\r\n    },\r\n    footer: {\r\n        marginTop: 'auto',\r\n        paddingBottom: '12px',\r\n    },\r\n}));\r\n\r\nexport default function DotifyControls(props) {\r\n    const classes = useStyles(props);\r\n\r\n    const [dotDiameter, setDiameter] = React.useState(props.settings.dotify.dotDiameter);\r\n    const [palette, setPalette] = React.useState('source');\r\n\r\n    const handleDiameterChange = (event, newValue) => {\r\n        setDiameter(newValue);\r\n    };\r\n\r\n    const handlePaletteChange = (event, newPalette) => {\r\n        setPalette(newPalette);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.controlContainer}>\r\n                <Typography className={classes.sliderTitle} id=\"dot-diameter-slider\" align='left' gutterBottom>\r\n                    Dot diameter\r\n                </Typography>\r\n                <Typography id=\"dot-diameter-value\" align='right' gutterBottom>\r\n                    {dotDiameter} px\r\n                </Typography>\r\n                <Slider\r\n                    className={classes.slider}\r\n                    value={dotDiameter}\r\n                    aria-labelledby=\"dot-diameter-slider\"\r\n                    step={1}\r\n                    min={1}\r\n                    max={100}\r\n                    valueLabelDisplay=\"off\"\r\n                    onChange={handleDiameterChange}\r\n                />\r\n            </div>\r\n            <div className={classes.controlContainer}>\r\n                <Typography id=\"colour-palette-label\" align='left' gutterBottom>\r\n                    Colour palette\r\n                </Typography>\r\n                <ToggleButtonGroup\r\n                    value={palette}\r\n                    exclusive\r\n                    onChange={handlePaletteChange}\r\n                    aria-label=\"colour palette\"\r\n                    aria-labelledby=\"colour-palette-label\"\r\n                    size=\"small\"\r\n                >\r\n                    <ToggleButton className={classes.paletteButton} value=\"source\" aria-label=\"centered\">\r\n                        source\r\n                    </ToggleButton>\r\n                    <ToggleButton className={classes.paletteButton} value=\"lego\" aria-label=\"centered\">\r\n                        lego\r\n                    </ToggleButton>\r\n                    <ToggleButton className={classes.paletteButton} value=\"custom\" aria-label=\"centered\" disabled>\r\n                        custom\r\n                    </ToggleButton>\r\n\r\n                </ToggleButtonGroup>\r\n            </div>\r\n            <div className={classes.footer}>\r\n                <Button id=\"actions-close-button\" className={classes.button} size=\"small\" variant=\"contained\" onClick={() => props.closeClick()}>Close</Button>\r\n                <Button id=\"actions-apply-button\" className={classes.button} size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => props.applyClick({ dotDiameter: dotDiameter, palette: palette })}>\r\n                    Apply\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    workspace: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: props => props.show ? 'flex' : 'none',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        paddingBottom: '59px',\r\n        paddingLeft: props => props.showActionPanel ? '290px' : '50px',\r\n    },\r\n}));\r\n\r\nexport default function Canvas(props) {\r\n    const classes = useStyles(props);\r\n\r\n    return (\r\n        <div className={classes.workspace}>\r\n            <canvas onWheel={(event) => props.zoom(event)} ref={props.canvasRef} ></canvas>\r\n        </div>\r\n    );\r\n}","let Colours = [\r\n    {legoColourId:1,     name:'White',                   hex: '#F4F4F4', BrickLinkId: 1, BrickLinkName: 'White'},\r\n    {legoColourId:5,     name:'Brick Yellow',            hex: '#B0A06F', BrickLinkId: 2, BrickLinkName: 'Tan'},\r\n    {legoColourId:18,    name:'Nougat',                  hex: '#BB805A', BrickLinkId: 28, BrickLinkName: 'Nougat'},\r\n    {legoColourId:21,    name:'Bright Red',              hex: '#B40000', BrickLinkId: 5, BrickLinkName: 'Red'},\r\n    {legoColourId:23,    name:'Bright Blue',             hex: '#1E5AA8', BrickLinkId: 7, BrickLinkName: 'Blue'},\r\n    {legoColourId:24,    name:'Bright Yellow',           hex: '#FAC80A', BrickLinkId: 3, BrickLinkName: 'Yellow'},\r\n    {legoColourId:26,    name:'Black',                   hex: '#1B2A34', BrickLinkId: 11, BrickLinkName: 'Black'},\r\n    {legoColourId:28,    name:'Dark Green',              hex: '#00852B', BrickLinkId: 6, BrickLinkName: 'Green'},\r\n    {legoColourId:37,    name:'Bright Green',            hex: '#58AB41', BrickLinkId: 36, BrickLinkName: 'Bright Green'},\r\n    {legoColourId:38,    name:'Dark Orange',             hex: '#91501C', BrickLinkId: 68, BrickLinkName: 'Dark Orange'},\r\n    {legoColourId:102,   name:'Medium Blue',             hex: '#7396C8', BrickLinkId: 42, BrickLinkName: 'Medium Blue'},\r\n    {legoColourId:106,   name:'Bright Orange',           hex: '#D67923', BrickLinkId: 4, BrickLinkName: 'Orange'},\r\n    {legoColourId:119,   name:'Bright Yellowish Green',  hex: '#A5CA18', BrickLinkId: 34, BrickLinkName: 'Lime'},\r\n    {legoColourId:124,   name:'Bright Reddish Violet',   hex: '#901F76', BrickLinkId: 71, BrickLinkName: 'Magenta'},\r\n    {legoColourId:135,   name:'Sand Blue',               hex: '#70819A', BrickLinkId: 55, BrickLinkName: 'Sand Blue'},\r\n    {legoColourId:138,   name:'Sand Yellow',             hex: '#897D62', BrickLinkId: 69, BrickLinkName: 'Dark Tan'},\r\n    {legoColourId:140,   name:'Earth Blue',              hex: '#19325A', BrickLinkId: 63, BrickLinkName: 'Dark Blue'},\r\n    {legoColourId:141,   name:'Earth Green',             hex: '#00451A', BrickLinkId: 80, BrickLinkName: 'Dark Green'},\r\n    {legoColourId:151,   name:'Sand Green',              hex: '#708E7C', BrickLinkId: 48, BrickLinkName: 'Sand Green'},\r\n    {legoColourId:154,   name:'New Dark Red',            hex: '#720012', BrickLinkId: 59, BrickLinkName: 'Dark Red'},\r\n    {legoColourId:191,   name:'Flame Yellowish Orange',  hex: '#FCAC00', BrickLinkId: 110, BrickLinkName: 'Bright Light Orange'},\r\n    {legoColourId:192,   name:'Reddish Brown',           hex: '#5F3109', BrickLinkId: 88, BrickLinkName: 'Reddish Brown'},\r\n    {legoColourId:194,   name:'Medium Stone Grey',       hex: '#969696', BrickLinkId: 86, BrickLinkName: 'Light Bluish Gray'},\r\n    {legoColourId:199,   name:'Dark Stone Grey',         hex: '#646464', BrickLinkId: 85, BrickLinkName: 'Dark Bluish Gray'},\r\n    {legoColourId:212,   name:'Light Royal Blue',        hex: '#9DC3F7', BrickLinkId: 105, BrickLinkName: 'Bright Light Blue'},\r\n    {legoColourId:221,   name:'Bright Purple',           hex: '#D3359D', BrickLinkId: 47, BrickLinkName: 'Dark Pink'},\r\n    {legoColourId:222,   name:'Light Purple',            hex: '#FF9ECD', BrickLinkId: 104, BrickLinkName: 'Bright Pink'},\r\n    {legoColourId:226,   name:'Cool Yellow',             hex: '#FFEC6C', BrickLinkId: 103, BrickLinkName: 'Bright Light Yellow'},\r\n    {legoColourId:268,   name:'Medium Lilac',            hex: '#441A91', BrickLinkId: 268, BrickLinkName: 'Dark Purple'},\r\n    {legoColourId:283,   name:'Light Nougat',            hex: '#FFC995', BrickLinkId: 90, BrickLinkName: 'Light Nougat'},\r\n    {legoColourId:297,   name:'Warm Gold',               hex: '#AA7F2E', BrickLinkId: 115, BrickLinkName: 'Pearl Gold'},\r\n    {legoColourId:308,   name:'Dark Brown',              hex: '#372100', BrickLinkId: 120, BrickLinkName: 'Dark Brown'},\r\n    {legoColourId:312,   name:'Medium Nougat',           hex: '#AA7D55', BrickLinkId: 150, BrickLinkName: 'Medium Nougat'},\r\n    {legoColourId:315,   name:'Silver Metallic',         hex: '#8C8C8C', BrickLinkId: 95, BrickLinkName: 'Flat Silver'},\r\n    {legoColourId:316,   name:'Titanium Metallic',       hex: '#3E3C39', BrickLinkId: 77, BrickLinkName: 'Pearl Dark Gray'},\r\n    {legoColourId:321,   name:'Dark Azur',               hex: '#469BC3', BrickLinkId: 153, BrickLinkName: 'Dark Azur'},\r\n    {legoColourId:322,   name:'Medium Azur',             hex: '#68C3E2', BrickLinkId: 156, BrickLinkName: 'Medium Azur'},\r\n    {legoColourId:323,   name:'Aqua',                    hex: '#D3F2EA', BrickLinkId: 152, BrickLinkName: 'Light Aqua'},\r\n    {legoColourId:324,   name:'Medium Lavender',         hex: '#A06EB9', BrickLinkId: 157, BrickLinkName: 'Medium Lavender'},\r\n    {legoColourId:325,   name:'Lavender',                hex: '#CDA4DE', BrickLinkId: 154, BrickLinkName: 'Lavender'},\r\n    {legoColourId:326,   name:'Spring Yellowish Green',  hex: '#E2F99A', BrickLinkId: 158, BrickLinkName: 'Yellowish Green'},\r\n    {legoColourId:329,   name:'White Glow',              hex: '#F5F3D7', BrickLinkId: 159, BrickLinkName: 'Glow In Dark White '},\r\n    {legoColourId:330,   name:'Olive Green',             hex: '#77774E', BrickLinkId: 155, BrickLinkName: 'Olive Green'},\r\n];\r\nexport default Colours;\r\n\r\n","import Colours from \"./Colours\";\r\n\r\nconst backgroundColour = '#212121'; // Colours.find(c => c.legoColourId === 26).hex; // lego black\r\nconst offsetFactor = 16;\r\n\r\nexport default class ImageProcessor {\r\n\r\n  processImage(imageCtx, outputCtx, dotSize, palette, scale) {\r\n    const dotOffset = dotSize / offsetFactor;\r\n    const coloursUsed = [];\r\n    const width = imageCtx.canvas.width;\r\n    const height = imageCtx.canvas.height;\r\n\r\n    outputCtx.canvas.width = width * scale;\r\n    outputCtx.canvas.height = height * scale;\r\n\r\n    outputCtx.clearRect(0, 0, width, height);\r\n    outputCtx.scale(scale, scale);\r\n\r\n    const { dotsHeight, dotsWidth } = this.calculateDotDimentions(width, height, dotSize);\r\n\r\n    let segmentSize = this.calculateSegmentSize(width, dotSize);\r\n\r\n    const outputArray = [];\r\n\r\n    for (let y = 0; y < dotsHeight; y++) {\r\n      outputArray.push([]);\r\n      for (let x = 0; x < dotsWidth; x++) {\r\n        let { r, g, b } = this.getAverageRGBValuesFromImageSegment(imageCtx, x, segmentSize, y);\r\n        const dotColour = palette === 'lego' ? this.colourMatch(r, g, b, coloursUsed).hex : this.toRGBString(r, g, b);\r\n        outputArray[y].push(dotColour);\r\n        this.drawDotToContext(outputCtx, backgroundColour, x, segmentSize, y, dotColour, dotOffset);\r\n      }\r\n    }\r\n\r\n    return {\r\n      coloursUsed: coloursUsed,\r\n      dotsWidth: dotsWidth,\r\n      dotsHeight: dotsHeight,\r\n      outputArray: outputArray,\r\n    };\r\n  }\r\n\r\n  calculateSegmentSize(width, dotSize) {\r\n    return width / (width / dotSize);\r\n  }\r\n\r\n  calculateDotDimentions(width, height, dotSize) {\r\n    const dotsWidth = Math.floor(width / dotSize);\r\n    const dotsHeight = Math.floor(height / dotSize);\r\n    return { dotsHeight, dotsWidth };\r\n  }\r\n\r\n  redrawImage(imageCtx, outputCtx, dotSize, scale, outputArray) {\r\n    const dotOffset = dotSize / offsetFactor;\r\n\r\n    const width = imageCtx.canvas.width;\r\n    const height = imageCtx.canvas.height;\r\n\r\n    outputCtx.canvas.width = width * scale;\r\n    outputCtx.canvas.height = height * scale;\r\n\r\n    outputCtx.clearRect(0, 0, width, height);\r\n    outputCtx.scale(scale, scale);\r\n\r\n    const { dotsHeight, dotsWidth } = this.calculateDotDimentions(width, height, dotSize);\r\n\r\n    let segmentSize = this.calculateSegmentSize(width, dotSize);\r\n\r\n    for (let y = 0; y < dotsHeight; y++) {\r\n      for (let x = 0; x < dotsWidth; x++) {\r\n        try {\r\n          const dotColour = outputArray[y][x];\r\n          this.drawDotToContext(outputCtx, backgroundColour, x, segmentSize, y, dotColour, dotOffset);\r\n        }\r\n        catch {\r\n          console.log('bad indexes: y=' + y + ', x=' + x);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawDotToContext(outputCtx, backgroundColour, x, segmentSize, y, dotColour, dotOffset) {\r\n    outputCtx.beginPath();\r\n    // draw the background square\r\n    outputCtx.fillStyle = backgroundColour;\r\n    outputCtx.fillRect(x * segmentSize, y * segmentSize, segmentSize, segmentSize);\r\n    // draw the dot\r\n    outputCtx.strokeStyle = dotColour;\r\n    outputCtx.fillStyle = dotColour;\r\n    outputCtx.arc(((segmentSize) / 2) + (x * segmentSize), ((segmentSize) / 2) + (y * segmentSize), ((segmentSize) / 2) - dotOffset, 0, 2 * Math.PI);\r\n    outputCtx.fill();\r\n    outputCtx.stroke();\r\n  }\r\n\r\n  toRGBString(r, g, b) {\r\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n  }\r\n\r\n  getAverageRGBValuesFromImageSegment(imageCtx, x, pieceSize, y) {\r\n    let imgData = imageCtx.getImageData(x * pieceSize, y * pieceSize, pieceSize, pieceSize);\r\n\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    for (let i = 0; i < imgData.data.length; i += 4) {\r\n      r += imgData.data[i];\r\n      g += imgData.data[i + 1];\r\n      b += imgData.data[i + 2];\r\n      // a += imgData.data[i + 3]; // alpha channel if required in future\r\n    }\r\n\r\n    r = r / (imgData.data.length / 4);\r\n    g = g / (imgData.data.length / 4);\r\n    b = b / (imgData.data.length / 4);\r\n\r\n    return { r, g, b };\r\n  }\r\n\r\n  colourMatch(r, g, b, coloursUsed) {\r\n    const matchResults = Colours.map(c => {\r\n      const colour = hexToRgb(c.hex);\r\n\r\n      let red = r - colour.r;\r\n      let green = g - colour.g;\r\n      let blue = b - colour.b;\r\n\r\n      if (red < 0)\r\n        red *= -1;\r\n      if (green < 0)\r\n        green *= -1;\r\n      if (blue < 0)\r\n        blue *= -1;\r\n\r\n      return red + green + blue;\r\n    });\r\n\r\n    const lowestMatchIndex = matchResults.indexOf(Math.min(...matchResults));\r\n    const closestColourMatch = Colours[lowestMatchIndex];\r\n\r\n    this.incrementUseCount(closestColourMatch, coloursUsed);\r\n\r\n    return closestColourMatch;\r\n  }\r\n\r\n  incrementUseCount(colour, coloursUsed) {\r\n    const usedIndex = coloursUsed.findIndex(x => x.colour.legoColourId === colour.legoColourId);\r\n\r\n    if (usedIndex > -1) {\r\n      coloursUsed[usedIndex].count++;\r\n    }\r\n    else {\r\n      coloursUsed.push({ colour: colour, count: 1 });\r\n    }\r\n  }\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n\r\n    },\r\n    tableContainer: {\r\n        overflowX: 'hidden',\r\n    },\r\n    link: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nexport default function ColourTable(props) {\r\n    const classes = useStyles(props);\r\n\r\n    props.rows.sort((a, b) => { return b.count - a.count });\r\n\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"Colours used\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>Leggo Name</TableCell>\r\n                        {/* <TableCell>BrickLink Name</TableCell> */}\r\n                        <TableCell>Quantity</TableCell>\r\n                        {/* <TableCell>Round Plate 1x1</TableCell>\r\n                        <TableCell>Round Tile 1x1</TableCell> */}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.rows.map((row) => (\r\n                        <TableRow key={row.colour.legoColourId}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <svg height=\"20\" width=\"20\">\r\n                                    <circle cx=\"10\" cy=\"10\" r=\"8\" stroke={row.colour.hex} strokeWidth=\"1\" fill={row.colour.hex} />\r\n                                </svg>\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                                <Link className={classes.link} href={'https://www.bricklink.com/v2/catalog/catalogitem.page?P=4073#T=C&C=' + row.colour.BrickLinkId} target=\"_blank\" rel=\"noopener noreferrer\">{row.colour.name}</Link>\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell>{row.colour.BrickLinkName}</TableCell> */}\r\n                            <TableCell>{row.count}</TableCell>\r\n                            {/* <TableCell>\r\n                                <a href={'https://www.bricklink.com/v2/catalog/catalogitem.page?P=4073#T=C&C=' + row.colour.BrickLinkId} target=\"_blank\" rel=\"noopener noreferrer\">bricklink</a>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <a href={'https://www.bricklink.com/v2/catalog/catalogitem.page?P=98138#T=S&C=' + row.colour.BrickLinkId} target=\"_blank\" rel=\"noopener noreferrer\">bricklink</a>\r\n                            </TableCell> */}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport { ListItemIcon, IconButton } from '@material-ui/core';\r\nimport ColourTable from './ColourTable';\r\nimport ScrollArea from 'react-scrollbar';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: props => props.show ? 'flex' : 'none',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        height: '100%',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    sectionHeader: {\r\n        minHeight: '30px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: '1em',\r\n        fontWeight: '600',\r\n    },\r\n    sectionDetails: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignSelf: 'flex-start',\r\n        marginLeft: '15px',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    table: {\r\n        overflow: 'auto',\r\n    },\r\n    footer: {\r\n        minHeight: '59px',\r\n        marginTop: 'auto',\r\n        borderTop: '1px solid rgba(255, 255, 255, 0.12)',\r\n    },\r\n}));\r\n\r\nfunction createThumbnail(showImage, src) {\r\n    const imgPlaceholder = (<ListItemIcon><WallpaperIcon fontSize=\"large\" /></ListItemIcon>);\r\n\r\n    return showImage ? (<img src={src} alt=\"\" style={{ maxHeight: \"80px\", maxWidth: \"80px\" }} />) : imgPlaceholder;\r\n}\r\n\r\nfunction OutputPanel(props) {\r\n    const { window } = props;\r\n    const classes = useStyles(props);\r\n\r\n    const sourceSrc = props.sourceCanvasRef.current ? props.sourceCanvasRef.current.toDataURL() : '';\r\n    const outputSrc = props.outputCanvasRef.current ? props.outputCanvasRef.current.toDataURL() : '';\r\n\r\n    const srcThumbnail = createThumbnail(sourceSrc !== '', sourceSrc);\r\n    const outputThumbnail = createThumbnail(props.imageProcessed, outputSrc);\r\n\r\n    const panel = (\r\n        <div className={classes.root}>\r\n            <div className={classes.sectionHeader} >Output</div>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button key='image' selected={!props.showCanvas} onClick={() => props.handleCanvasToggle()}>\r\n                    {srcThumbnail}\r\n                    <div className={classes.sectionDetails}>\r\n                        <div>\r\n                            Source Image\r\n                        </div>\r\n                        <div >\r\n                            w: {props.sourceImage.naturalWidth} px\r\n                        </div>\r\n                        <div>\r\n                            h: {props.sourceImage.naturalHeight} px\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <ListItem button key='dot-canvas' selected={props.showCanvas} onClick={() => props.handleCanvasToggle()}>\r\n                    {outputThumbnail}\r\n                    <div className={classes.sectionDetails}>\r\n                        <div>\r\n                            Dot canvas\r\n                        </div>\r\n                        <div >\r\n                            w: {props.outputCanvasDetails.dotsWidth}  dots\r\n                        </div>\r\n                        <div>\r\n                            h: {props.outputCanvasDetails.dotsHeight} dots\r\n                        </div>\r\n                        <div>\r\n                            total: {props.outputCanvasDetails.dotsWidth * props.outputCanvasDetails.dotsHeight}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <div className={classes.sectionHeader} >Colours</div>\r\n            <Divider />\r\n\r\n            <ScrollArea\r\n                speed={0.8}\r\n                horizontal={false}\r\n            >\r\n                <ColourTable rows={props.outputCanvasDetails.coloursUsed}></ColourTable>\r\n            </ScrollArea>\r\n\r\n            <div className={classes.footer}>\r\n                <IconButton onClick={props.handleDrawerToggle}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"persistent\"\r\n                        anchor=\"right\"\r\n                        open={false}\r\n                        onClose={props.handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {panel}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"persistent\"\r\n                        anchor=\"right\"\r\n                        open={props.show}\r\n                    >\r\n                        {panel}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutputPanel;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport './MenuDrawer.js';\nimport MenuDrawer from './MenuDrawer.js';\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport BottomAppBar from './BottomBar';\nimport ActionPanel from './ActionsPanel';\nimport DotifyControls from './DotifyControls';\nimport { CssBaseline } from '@material-ui/core';\nimport Canvas from './Canvas';\nimport ImageProcessor from './ImageProcessor';\nimport OutputPanel from './OutputPanel';\nimport ScrollArea from 'react-scrollbar';\n\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'consolas',\n    ].join(','),\n  },\n});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.imageProcessor = new ImageProcessor();\n\n    this.state = {\n      image: new Image(),\n      canvasRef: React.createRef(),\n      outputCanvasRef: React.createRef(),\n      showActionPanel: false,\n      showOutputPanel: false,\n      showCanvas: false,\n      imageProcessed: false,\n      actionPanelContent: () => { return (null) },\n      actionPanelSettings: {\n        dotify: {\n          dotDiameter: 8,\n          palette: null,\n        },\n      },\n      outputCanvasDetails: {\n        coloursUsed: [],\n        dotsWidth: 0,\n        dotsHeight: 0,\n      },\n      outputSettings: null,\n      outputScale: 1,\n    }\n  }\n\n  loadImage = (event) => {\n    if (event.path && event.path[0]) {\n      const image = event.path[0];\n      const ctx = this.state.canvasRef.current.getContext('2d');\n      ctx.canvas.width = image.naturalWidth;\n      ctx.canvas.height = image.naturalHeight;\n      ctx.drawImage(event.path[0], 0, 0);\n\n      // clear the output canvas\n      const outputCtx = this.state.outputCanvasRef.current.getContext('2d');\n      outputCtx.clearRect(0, 0, outputCtx.canvas.width, outputCtx.canvas.height);\n\n      this.setState({\n        image: event.path[0],\n        showActionPanel: false,\n        showCanvas: false,\n        imageProcessed: false,\n        outputCanvasDetails: {\n          coloursUsed: [],\n          dotsWidth: 0,\n          dotsHeight: 0,\n        }\n      });\n    }\n  }\n\n  handleToggleActionsPanel = (event) => {\n    let actionPanelContent = null;\n\n    switch (event) {\n      case \"Dotify\":\n        actionPanelContent = DotifyControls;\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      showActionPanel: !this.state.showActionPanel,\n      actionPanelContent: actionPanelContent,\n    });\n  }\n\n  handleActionPanelApply = (settings) => {\n    const details = this.imageProcessor.processImage(\n      this.state.canvasRef.current.getContext('2d'),\n      this.state.outputCanvasRef.current.getContext('2d'),\n      settings.dotDiameter, settings.palette,\n      this.state.outputScale\n    );\n    this.setState({\n      showCanvas: true,\n      outputCanvasDetails: details,\n      imageProcessed: true,\n      showOutputPanel: true,\n      outputSettings: settings,\n    });\n  }\n\n  handCloseActionPanel = () => {\n    this.setState({\n      showActionPanel: !this.state.showActionPanel,\n    });\n  }\n\n  handleCanvasToggle = () => {\n    this.setState({\n      showCanvas: !this.state.showCanvas,\n    });\n  }\n\n  handleOutputPanelToggle = () => {\n    this.setState({\n      showOutputPanel: !this.state.showOutputPanel,\n    });\n  }\n\n  handleOutputCanvasZoom = (event) => {\n    console.log('zoom event');\n    console.log(event);\n\n    let scale = this.state.outputScale;\n\n    scale += event.deltaY * -0.0025;\n\n    // Restrict scale\n    scale = Math.min(Math.max(.125, scale), 4);\n\n    this.imageProcessor.redrawImage(\n      this.state.canvasRef.current.getContext('2d'),\n      this.state.outputCanvasRef.current.getContext('2d'),\n      this.state.outputSettings.dotDiameter,\n      scale,\n      this.state.outputCanvasDetails.outputArray,\n    );\n\n    this.setState({\n      outputScale: scale,\n    });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <MenuDrawer\n            onImageLoad={this.loadImage}\n            menuItemClick={this.handleToggleActionsPanel}\n          ></MenuDrawer>\n          <ActionPanel\n            show={this.state.showActionPanel}\n            children={this.state.actionPanelContent}\n            settings={this.state.actionPanelSettings}\n            applyClick={this.handleActionPanelApply}\n            closeClick={this.handCloseActionPanel}\n          ></ActionPanel>\n          <ScrollArea\n            speed={0.8}\n            horizontal={true}\n            style={{width:'100%', height:'100%'}}\n          >\n            <Canvas\n              canvasRef={this.state.canvasRef}\n              showingActionPanel={this.state.showActionPanel}\n              show={!this.state.showCanvas}\n            ></Canvas>\n            <Canvas\n              canvasRef={this.state.outputCanvasRef}\n              showingActionPanel={this.state.showActionPanel}\n              show={this.state.showCanvas}\n              zoom={this.handleOutputCanvasZoom}\n            ></Canvas>\n          </ScrollArea>\n          <OutputPanel\n            show={this.state.showOutputPanel}\n            handleDrawerToggle={this.handleOutputPanelToggle}\n            handleCanvasToggle={this.handleCanvasToggle}\n            showCanvas={this.state.showCanvas}\n            sourceCanvasRef={this.state.canvasRef}\n            outputCanvasRef={this.state.outputCanvasRef}\n            sourceImage={this.state.image}\n            outputCanvasDetails={this.state.outputCanvasDetails}\n            imageProcessed={this.state.imageProcessed}\n          ></OutputPanel>\n          <BottomAppBar\n            image={this.state.image}\n            showingActionPanel={this.state.showActionPanel}\n            showOutputPanel={this.handleOutputPanelToggle}\n          ></BottomAppBar>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}